:persist wxpoint "Geometry [X,Y] Create a  wxpoint" pcbnew list swap list wxPoint callargs ;
:persist toptextobj "Elements Get the top level text objects." drawings EDA_TEXT filtertype ;
:persist valuetextobj "Elements Get all module's Value text objects." modules Value call ;
:persist referencetextobj "Elements Get all module's Reference text objects." modules Reference call ;
:persist moduletextobj "Elements Get all module's text objects that are not Value and not Reference." modules GraphicalItems calllist EDA_TEXT filtertype ;
:persist drawparams "Draw [THICKNESS,WIDTH,HEIGHT LAYER] Set drawing parameters for future draw commands.\nExample: 1,5,5 mm F.Fab drawparams" 'l param t,w,h param ;
:persist textfromobj "Elements [TEXTOBJECT] Get the text string from a text object." GetShownText call ;
:persist valuetext "Elements Get all module's Value text as a string." modules GetValue call ;
:persist referencetext "Elements Get all module's Reference text as a string." modules GetReference call ;
:persist not "Programming [VALUELIST] Invert the boolean value. False, 0, None becomes True and True, non-zero, non-empty list becomes False." ' = ;
:persist copy "Programming Copies the top of the stack." 0 pick ;
:persist setselect "Elements [OBJECTLIST] Sets the objects as Selected." SetSelected call ;
:persist clearselect "Elements [OBJECTLIST] Sets the objects as Unselected." ClearSelected call ;
:persist orthogonal "Draw Make the angle between all elements a integer multiple 90 degrees." 90 makeangle ;
:persist clearallselected "Elements Clear the selection of all items."
        modules copy GetReference call clearselect
        copy GetValue call clearselect
        copy GraphicalItems calllist clearselect
        clearselect
        pads clearselect
        tracks clearselect
        drawings clearselect 
        ;
:persist outlinepads "Draw Outline all pads using line segments with the layer and width specified by drawparams." 
        pads copy corners swap copy GetCenter call swap 
        GetOrientationDegrees call rotatepoints drawsegments
        ;
:persist outlinetext "Draw Outline all text objects with the layer and width specified by drawparams."
        valuetextobj
        referencetextobj append 
        moduletextobj append 
        toptextobj append
        copy GetTextBox call corners swap copy GetCenter call swap 
        copy GetTextAngleDegrees call swap GetParent call Cast call GetOrientationDegrees call
        +l rotatepoints drawsegments
        ;
        
:persist outlinetoptext "Draw Outline all top text objects with the layer and width specified by drawparams."
        toptextobj
        copy GetTextBox call corners swap copy GetCenter call swap
        GetTextAngleDegrees call rotatepoints drawsegments ;
        ;
:persist texttosegments "Draw [TEXTOBJLIST LAYER] Copies text objects in TEXTOBJLIST to LAYER."
        swap copy GetThickness call list swap 
        topoints pairwise 2 pick todrawsegments 
        copy 2 pick SetWidth callargs pop
        swap pop swap pop
        ;
        